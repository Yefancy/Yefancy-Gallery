{"version":3,"file":"three-spritetext.js","sources":["../src/index.js"],"sourcesContent":["import {\n  LinearFilter,\n  Sprite,\n  SpriteMaterial,\n  Texture\n} from 'three';\n\nconst three = typeof window !== 'undefined' && window.THREE\n  ? window.THREE // Prefer consumption from global THREE, if exists\n  : {\n  LinearFilter,\n  Sprite,\n  SpriteMaterial,\n  Texture\n};\n\nexport default class extends three.Sprite {\n  constructor(text = '', textHeight = 10, color = 'rgba(255, 255, 255, 1)') {\n    super(new three.SpriteMaterial({ map: new three.Texture() }));\n\n    this._text = `${text}`;\n    this._textHeight = textHeight;\n    this._color = color;\n    this._backgroundColor = false; // no background color\n\n    this._padding = 0;\n    this._borderWidth = 0;\n    this._borderRadius = 0;\n    this._borderColor = 'white';\n\n    this._strokeWidth = 0;\n    this._strokeColor = 'white';\n\n    this._fontFace = 'Arial';\n    this._fontSize = 90; // defines text resolution\n    this._fontWeight = 'normal';\n\n    this._canvas = document.createElement('canvas');\n    this._texture = this.material.map;\n    this._texture.minFilter = three.LinearFilter;\n\n    this._genCanvas();\n  }\n\n  get text() { return this._text; }\n  set text(text) { this._text = text; this._genCanvas(); }\n  get textHeight() { return this._textHeight; }\n  set textHeight(textHeight) { this._textHeight = textHeight; this._genCanvas(); }\n  get color() { return this._color; }\n  set color(color) { this._color = color; this._genCanvas(); }\n  get backgroundColor() { return this._backgroundColor; }\n  set backgroundColor(color) { this._backgroundColor = color; this._genCanvas(); }\n  get padding() { return this._padding; }\n  set padding(padding) { this._padding = padding; this._genCanvas(); }\n  get borderWidth() { return this._borderWidth; }\n  set borderWidth(borderWidth) { this._borderWidth = borderWidth; this._genCanvas(); }\n  get borderRadius() { return this._borderRadius; }\n  set borderRadius(borderRadius) { this._borderRadius = borderRadius; this._genCanvas(); }\n  get borderColor() { return this._borderColor; }\n  set borderColor(borderColor) { this._borderColor = borderColor; this._genCanvas(); }\n  get fontFace() { return this._fontFace; }\n  set fontFace(fontFace) { this._fontFace = fontFace; this._genCanvas(); }\n  get fontSize() { return this._fontSize; }\n  set fontSize(fontSize) { this._fontSize = fontSize; this._genCanvas(); }\n  get fontWeight() { return this._fontWeight; }\n  set fontWeight(fontWeight) { this._fontWeight = fontWeight; this._genCanvas(); }\n  get strokeWidth() { return this._strokeWidth; }\n  set strokeWidth(strokeWidth) { this._strokeWidth = strokeWidth; this._genCanvas(); }\n  get strokeColor() { return this._strokeColor; }\n  set strokeColor(strokeColor) { this._strokeColor = strokeColor; this._genCanvas(); }\n\n  _genCanvas() {\n    const canvas = this._canvas;\n    const ctx = canvas.getContext('2d');\n\n    const border = Array.isArray(this.borderWidth) ? this.borderWidth : [this.borderWidth, this.borderWidth]; // x,y border\n    const relBorder = border.map(b => b * this.fontSize * 0.1); // border in canvas units\n\n    const borderRadius = Array.isArray(this.borderRadius) ? this.borderRadius : [this.borderRadius, this.borderRadius, this.borderRadius, this.borderRadius]; // tl tr br bl corners\n    const relBorderRadius = borderRadius.map(b => b * this.fontSize * 0.1); // border radius in canvas units\n\n    const padding = Array.isArray(this.padding) ? this.padding : [this.padding, this.padding]; // x,y padding\n    const relPadding = padding.map(p => p * this.fontSize * 0.1); // padding in canvas units\n\n    const lines = this.text.split('\\n');\n    const font = `${this.fontWeight} ${this.fontSize}px ${this.fontFace}`;\n\n    ctx.font = font; // measure canvas with appropriate font\n    const innerWidth = Math.max(...lines.map(line => ctx.measureText(line).width));\n    const innerHeight = this.fontSize * lines.length;\n    canvas.width = innerWidth + relBorder[0] * 2 + relPadding[0] * 2;\n    canvas.height = innerHeight + relBorder[1] * 2 + relPadding[1] * 2;\n\n    // paint border\n    if (this.borderWidth) {\n      ctx.strokeStyle = this.borderColor;\n\n      if (relBorder[0]) { // left + right borders\n        const hb = relBorder[0] / 2;\n        ctx.lineWidth = relBorder[0];\n        ctx.beginPath();\n        ctx.moveTo(hb, relBorderRadius[0]);\n        ctx.lineTo(hb, canvas.height - relBorderRadius[3]);\n        ctx.moveTo(canvas.width - hb, relBorderRadius[1]);\n        ctx.lineTo(canvas.width - hb, canvas.height - relBorderRadius[2]);\n        ctx.stroke();\n      }\n\n      if (relBorder[1]) { // top + bottom borders\n        const hb = relBorder[1] / 2;\n        ctx.lineWidth = relBorder[1];\n        ctx.beginPath();\n        ctx.moveTo(Math.max(relBorder[0], relBorderRadius[0]), hb);\n        ctx.lineTo(canvas.width - Math.max(relBorder[0], relBorderRadius[1]), hb);\n        ctx.moveTo(Math.max(relBorder[0], relBorderRadius[3]), canvas.height - hb);\n        ctx.lineTo(canvas.width - Math.max(relBorder[0], relBorderRadius[2]), canvas.height - hb);\n        ctx.stroke();\n      }\n\n      if (this.borderRadius) { // strike rounded corners\n        const cornerWidth = Math.max(...relBorder);\n        const hb = cornerWidth / 2;\n        ctx.lineWidth = cornerWidth;\n        ctx.beginPath();\n        [\n          !!relBorderRadius[0] && [relBorderRadius[0], hb, hb, relBorderRadius[0]],\n          !!relBorderRadius[1] && [canvas.width - relBorderRadius[1], canvas.width - hb, hb, relBorderRadius[1]],\n          !!relBorderRadius[2] && [canvas.width - relBorderRadius[2], canvas.width - hb, canvas.height - hb, canvas.height - relBorderRadius[2]],\n          !!relBorderRadius[3] && [relBorderRadius[3], hb, canvas.height - hb, canvas.height - relBorderRadius[3]]\n        ].filter(d => d).forEach(([x0, x1, y0, y1]) => {\n          ctx.moveTo(x0, y0);\n          ctx.quadraticCurveTo(x1, y0, x1, y1);\n        });\n        ctx.stroke();\n      }\n    }\n\n    // paint background\n    if (this.backgroundColor) {\n      ctx.fillStyle = this.backgroundColor;\n      if (!this.borderRadius) {\n        ctx.fillRect(relBorder[0], relBorder[1], canvas.width - relBorder[0] * 2, canvas.height - relBorder[1] * 2);\n      } else { // fill with rounded corners\n        ctx.beginPath();\n        ctx.moveTo(relBorder[0], relBorderRadius[0]);\n        [\n          [relBorder[0], relBorderRadius[0], canvas.width - relBorderRadius[1], relBorder[1], relBorder[1], relBorder[1]], // t\n          [canvas.width - relBorder[0], canvas.width - relBorder[0], canvas.width - relBorder[0], relBorder[1], relBorderRadius[1], canvas.height - relBorderRadius[2]], // r\n          [canvas.width - relBorder[0], canvas.width - relBorderRadius[2], relBorderRadius[3], canvas.height - relBorder[1], canvas.height - relBorder[1], canvas.height - relBorder[1]], // b\n          [relBorder[0], relBorder[0], relBorder[0], canvas.height - relBorder[1], canvas.height - relBorderRadius[3], relBorderRadius[0]], // t\n        ].forEach(([x0, x1, x2, y0, y1, y2]) => {\n          ctx.quadraticCurveTo(x0, y0, x1, y1);\n          ctx.lineTo(x2, y2);\n        });\n        ctx.closePath();\n        ctx.fill();\n      }\n    }\n\n    ctx.translate(...relBorder);\n    ctx.translate(...relPadding);\n\n    // paint text\n    ctx.font = font; // Set font again after canvas is resized, as context properties are reset\n    ctx.fillStyle = this.color;\n    ctx.textBaseline = 'bottom';\n\n    const drawTextStroke = this.strokeWidth > 0;\n    if (drawTextStroke) {\n      ctx.lineWidth = this.strokeWidth * this.fontSize / 10;\n      ctx.strokeStyle = this.strokeColor;\n    }\n\n    lines.forEach((line, index) => {\n      const lineX = (innerWidth - ctx.measureText(line).width) / 2;\n      const lineY = (index + 1) * this.fontSize;\n\n      drawTextStroke && ctx.strokeText(line, lineX, lineY);\n      ctx.fillText(line, lineX, lineY);\n    });\n\n    // Inject canvas into sprite\n    this._texture.image = canvas;\n    this._texture.needsUpdate = true;\n\n    const yScale = this.textHeight * lines.length + border[1] * 2 + padding[1] * 2;\n    this.scale.set(yScale * canvas.width / canvas.height, yScale, 0);\n  }\n\n  clone() {\n    return new this.constructor(this.text, this.textHeight, this.color).copy(this);\n  }\n\n  copy(source) {\n    three.Sprite.prototype.copy.call(this, source);\n\n    this.color = source.color;\n    this.backgroundColor = source.backgroundColor;\n    this.padding = source.padding;\n    this.borderWidth = source.borderWidth;\n    this.borderColor = source.borderColor;\n    this.fontFace = source.fontFace;\n    this.fontSize = source.fontSize;\n    this.fontWeight = source.fontWeight;\n    this.strokeWidth = source.strokeWidth;\n    this.strokeColor = source.strokeColor;\n\n    return this;\n  }\n}\n"],"names":["three","window","THREE","LinearFilter","Sprite","SpriteMaterial","Texture","text","textHeight","color","map","_text","_textHeight","_color","_backgroundColor","_padding","_borderWidth","_borderRadius","_borderColor","_strokeWidth","_strokeColor","_fontFace","_fontSize","_fontWeight","_canvas","document","createElement","_texture","material","minFilter","_genCanvas","padding","borderWidth","borderRadius","borderColor","fontFace","fontSize","fontWeight","strokeWidth","strokeColor","canvas","ctx","getContext","border","Array","isArray","relBorder","b","relBorderRadius","relPadding","p","lines","split","font","innerWidth","Math","max","line","measureText","width","innerHeight","length","height","strokeStyle","hb","lineWidth","beginPath","moveTo","lineTo","stroke","cornerWidth","filter","d","forEach","x0","x1","y0","y1","quadraticCurveTo","backgroundColor","fillStyle","fillRect","x2","y2","closePath","fill","translate","textBaseline","drawTextStroke","index","lineX","lineY","strokeText","fillText","image","needsUpdate","yScale","scale","set","constructor","copy","source","prototype","call"],"mappings":"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"}